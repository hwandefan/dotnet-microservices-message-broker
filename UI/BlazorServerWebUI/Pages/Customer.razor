@page "/customer"
@using BlazorServerWebUI.Models
@inject HttpClient httpClient

<PageTitle>Customer</PageTitle>
<h1>Customer</h1>
<tbody>
    <tr>
        <td><input class="form-control" @bind="newCustomer.CustomerName" placeholder="Name" /></td>
        <td><input class="form-control" @bind="newCustomer.MobileNumber" placeholder="Mobile" /></td>
        <td><input class="form-control" @bind="newCustomer.Email" placeholder="Email" /></td>
        <td><a @onclick="SaveCustomer" href="javascript:void(0)"><button type="button" class="btn btn-success">Add</button></a></td>
        <td></td>
    </tr>
    @if (customers != null && customers.Count != 0)
    {
        foreach (var customer in customers)
        {
            <CustomerRecord Customer="customer"
                            UpdateCustomer="UpdateCustomer"
                            DeleteCustomer="DeleteCustomer">

            </CustomerRecord>
        }
    }
    else
    {
        <tr>
            <td class="text-center" colspan="5">No customer records to display</td>
        </tr>
    }
</tbody>


@code {
    private List<CustomerViewModel> customers;
    private CustomerViewModel newCustomer = new CustomerViewModel();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await GetCustomers();
    }

    private async Task GetCustomers()
    {
        customers = await httpClient.GetFromJsonAsync<List<CustomerViewModel>>("/api/Customer");
    }

    private async Task SaveCustomer()
    {
        await httpClient.PostAsJsonAsync<CustomerViewModel>("/api/Customer",newCustomer);
        await GetCustomers();
        newCustomer = new CustomerViewModel();
    }

    private async Task UpdateCustomer(CustomerViewModel customer)
    {
        await httpClient.PutAsJsonAsync<CustomerViewModel>("/api/Customer", customer);
        await GetCustomers();
    }

    private async Task DeleteCustomer(int customerId)
    {
        var result = await httpClient.DeleteAsync($"/api/Customer/{customerId}");
        await GetCustomers();
    }

}